if exists('g:loaded_pwn_ftplugin')
    finish
endif
let g:loaded_pwn_ftplugin = 1

" Run command
function! s:RunInInteractiveShell(command)
  let saved_shellcmdflag = &shellcmdflag
  set shellcmdflag+=il
  try
    execute '!'. a:command
  finally
    execute 'set shellcmdflag=' . saved_shellcmdflag
  endtry
endfunction

command! -nargs=1 RunInInteractiveShell call <sid>RunInInteractiveShell(<f-args>)
map <leader>r :RunInInteractiveShell python %<CR>

" Insert 'pause()'
function! exploit#insert_bp(lnum, cmd)
    let line = getline(a:lnum)
    if strridx(line, a:cmd) != -1
        normal dd
    else
        let plnum = prevnonblank(a:lnum)
        call append(line('.')-1, repeat(' ', indent(plnum)).a:cmd)
        normal k
    endif
endfunction
let g:pwn_pause_cmd = 'pause()  # XXX: STOP here'
map <leader>p :call exploit#insert_bp(line('.'), g:pwn_pause_cmd)<CR>

" File template
let g:pwn_template = get(g:, 'pwn_template', 1)
function! s:loadtemplate()
    call append(0, "from pwn import *")
    call append(1, "")
    call append(2, "\# r = remote('X', X)")
    call append(3, "r = process([''])")
    call cursor( 4, 15 )
    set nomodified
    startinsert
    return 1
endfunction
function! s:isnewfile()
    return ( has('byte_offset') ? line2byte(1) == -1 : getline(1,2) == [''] )
        \ && ! &modified && ( g:pwn_template || ! filereadable(bufname('')) )
endfunction
if s:isnewfile() | call s:loadtemplate() | endif
